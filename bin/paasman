#! /usr/bin/env python
# -*- encoding: utf-8 -*-

import argparse
import sys
import os

import requests

# TODO: maybe change from requests to lib in stdlib

class PaasmanClient(object):
    def __init__(self, uri):
        self.uri = uri


    def _build_url(self, endpoint):
        if endpoint.startswith("/"): endpoint = endpoint[1:]
        return self.uri + endpoint

    def deploy(self, file, app, instances, processes):
        """Deploy the application to the paasman system"""
        try:
            f = open(file)
        except IOError as e:
            print "Could not open or read the file, check that the file exists"
        else:
            # successfully read the file
            r = requests.post(
                self._build_url("/apps/"),
                files={"file": f},
                data={"app": app}
            )
            print "uploaded: ", r.text

        print "uploading file %s for application %s" % (file, app)

    def run(self):
        """Handle the CLI to delegate to the correct method"""
        parser = argparse.ArgumentParser("paasman")

        subparsers = parser.add_subparsers(help="sub-command...", dest="command")

        push_parser = subparsers.add_parser("push", help="push filename appname")
        push_parser.add_argument("filename", type=str, help="the file to deploy")
        push_parser.add_argument("appname", type=str, help="the application name to deploy")

        # optionals
        push_parser.add_argument("-instances", type=str, help="number of virtual machines to deploy to")
        push_parser.add_argument("-processes", type=str, help="number of processes to use")

        vm_parser = subparsers.add_parser("add-runtime-vm", help="add-runtime-vm n")
        vm_parser.add_argument("instances", metavar="N", type=int, help="number of virtual machines to add to the cluster")
 
        args = parser.parse_args()
        #print args
        if args.command == "push":
            self.deploy(
                file=args.filename,
                app=args.appname,
                instances=args.instances,
                processes=args.processes
           )
        else:
            print "add-runtime-vm is not implemented"

if __name__ == "__main__":
    HOST = "http://127.0.0.1:8001/"
    #HOST = "http://10.10.10.25:5000"
    client = PaasmanClient(HOST)
    client.run()
